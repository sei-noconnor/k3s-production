---
- name: Set SELinux to disabled state
  selinux:
    state: disabled
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'RedHat']

- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes

- name: Add br_netfilter to /etc/modules-load.d/
  copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'RedHat']

- name: Load br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'RedHat']

- name: Set bridge-nf-call-iptables (just to be sure)
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: yes
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'RedHat']
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Add NFS Packages DNF
  ansible.builtin.dnf:
    name: 
    - nfs-utils
    - iscsi-initiator-utils
    state: present
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'RedHat']

- name: Add NFS Packages APT
  ansible.builtin.apt:
    name: 
    - nfs-common
    - open-iscsi
    state: present
    update_cache: yes
  when: ansible_distribution in ['Ubuntu', 'Debian']

- name: set proxy environment variables
  lineinfile:
    dest: /etc/environment
    state: present
    regexp: "^{{item.key}}="
    line: "{{item.key}}={{item.value}}"
  with_items: 
    - { key: HTTP_PROXY, value: "{{proxy}}" }
    - { key: HTTPS_PROXY, value: "{{proxy}}" }
    - { key: NO_PROXY, value: "{{no_proxy}}" }
    - { key: http_proxy, value: "{{proxy}}" }
    - { key: https_proxy, value: "{{proxy}}" }
    - { key: no_proxy, value: "{{no_proxy}}" }

- name: Open flannel port
  firewalld:
    permanent: yes
    immediate: yes
    port: "{{item}}"
    state: "enabled"
  with_items:
    # - 80/tcp
    # - 443/tcp
    # - 2049/tcp
    - 2379-2380/tcp
    # - 6443/tcp
    # - 8000/tcp
    # - 8002/tcp
    # - 8500-8501/tcp
    # - 9500/tcp
    - 10250-10252/tcp
    - 10255/tcp
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'RedHat']

- name: Open API port
  firewalld:
    permanent: yes
    immediate: yes
    port: 8443/tcp
    state: "enabled"
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'RedHat']

- name: set source networks
  firewalld:
    permanent: yes
    immediate: yes
    zone: "{{item.zone}}"
    state: "{{item.state}}"
    source: "{{item.source}}"
  with_items:
    - {state: "enabled", zone: "trusted", source: "10.42.0.0/16"}
    - {state: "enabled", zone: "trusted", source: "10.43.0.0/16"}
    - {state: "enabled", zone: "trusted", source: "{{default_network}}/24"}
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'RedHat']

- name: Add /usr/local/bin to sudo secure_path
  lineinfile:
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: 'visudo -cf %s'
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'RedHat']
