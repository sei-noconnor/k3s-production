caster-api:
  kind: "StatefulSet"
  image:
    repository: cmusei/caster-api
    tag: '3.2.0'
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: $INGRESS_CLASS
      nginx.ingress.kubernetes.io/proxy-read-timeout: '86400'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '86400'
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: $DOMAIN
        paths:
          - path: /caster/(api|swagger|hubs)
            pathType: Prefix
    tls:
      - secretName: appliance-cert
        hosts:
         - $DOMAIN

  # Gets placed in /etc/gitconfig to allow immediate Gitlab access via access token
  # Replace TOKEN with an access token created in Gitlab, and update the Gitlab URL
    gitcredentials: ""
  
  # Use a .terraformrc file to overwrite standard Terraform configuration
  terraformrc:
    enabled: true
    value: |
      plugin_cache_dir = "/terraform/plugin-cache"
     
  certificateMap: "appliance-root-ca"

  # storage - either an existing pvc, the size for a new pvc, or emptyDir
  storage:
    existing: ""
    size: "2G"
    mode: ReadWriteOnce
    class: $STORAGE_CLASS
  
  env:
    PathBase: "/caster"
    # This deployment comes built in with a script to install Terraform and the necessary
    # plugins to run Caster properly.  Internet access is required for this script to run properly.
    # It's recommended that this should remain false.  Please see the file "terraform-installation.tpl"
    # for more information on the installation process.
    
    SKIP_TERRAFORM_INSTALLATION: false

    VSPHERE_SERVER: "$VSPHERE_SERVER"
    VSPHERE_USER: "$VSPHERE_USER"
    VSPHERE_PASSWORD: "$VSPHERE_PASS"
    VSPHERE_ALLOW_UNVERIFIED_SSL: true

    # See here for more information regarding AllowedHosts
    # https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.hostfiltering.hostfilteringoptions.allowedhosts?view=aspnetcore-3.1
    AllowedHosts: "*"
    Logging__LogLevel__Default: "$CRUCIBLE_LOG_LEVEL"
    Logging__LogLevel__System: "$CRUCIBLE_LOG_LEVEL"
    Logging__LogLevel__Microsoft: "$CRUCIBLE_LOG_LEVEL"
    Logging__Console__LogLevel__Default: "$CRUCIBLE_LOG_LEVEL"
    Logging__Console__LogLevel__System: "$CRUCIBLE_LOG_LEVEL"
    Logging__Console__LogLevel__Microsoft: "$CRUCIBLE_LOG_LEVEL"
    CorsPolicy__Origins__0: "https://$DOMAIN"
    # CorsPolicy__AllowAnyOrigin: true
    CorsPolicy__AllowAnyMethod: true
    CorsPolicy__AllowAnyHeader: true

    ConnectionStrings__PostgreSQL: "Server=$POSTGRES_SERVER;Port=5432;Database=caster_db;Username=$POSTGRES_USER;Password='$POSTGRES_PASS';SSL Mode=Prefer;Trust Server Certificate=true;"

    # OAuth2 Identity Client for Application
    Authorization__Authority: https://$DOMAIN/$OAUTH_PROVIDER/$OAUTH_AUTHORITY_URL
    Authorization__AuthorizationUrl: https://$DOMAIN/$OAUTH_PROVIDER/$OAUTH_AUTHORIZATION_URL
    Authorization__TokenUrl: https://$DOMAIN/$OAUTH_PROVIDER/$OAUTH_TOKEN_URL
    Authorization__AuthorizationScope: "caster-api"
    Authorization__ClientId: ${OAUTH_ENV_NAME}_${OAUTH_GROUP_ID}_caster-api

    # OAuth2 Identity Client /w Password
    Client__TokenUrl: https://$DOMAIN/$OAUTH_PROVIDER/$OAUTH_TOKEN_URL
    Client__ClientId: ${OAUTH_ENV_NAME}_${OAUTH_GROUP_ID}_caster-admin
    Client__UserName: "crucible-admin@$DOMAIN"
    Client__Password: "$CRUCIBLE_ADMIN_PASS"
    Client__Scope: "player-api vm-api"

    # Crucible Player URLs
    Player__VmApiUrl: "https://$DOMAIN/vm"
    Player__VmConsoleUrl: "https://$DOMAIN/console/vm/{id}/console"

    # Terraform Information
    # - DefaultVersion - The default version to be used.
    # - GitlabApiUrl - URL to the deployed Gitlab instance
    Terraform__BinaryPath: /terraform/binaries
    Terraform__RootWorkingDirectory: /terraform/root
    Terraform__PluginCache: /terraform/plugin-cache
    Terraform__DefaultVersion: "0.14.0"
    Terraform__GitlabApiUrl: "http://gitlab-webservice-default:8080/api/v4/"
    Terraform__GitlabToken: "wMa2RPQP_ZR3fxc5zQtv"
    Terraform__GitlabGroupId: "4"

    # Configurable save lengths for Caster untagged versions
    FileVersions__DaysToSaveAllUntaggedVersions: 7
    FileVersions__DaysToSaveDailyUntaggedVersions: 31

    # Basic seed data to jumpstart deployement
    SeedData__Users__0__id: "$OAUTH_ADMIN_GUID"
    SeedData__Users__0__name:  "administrator@$DOMAIN"
    SeedData__Users__1__id:  "$OAUTH_CRUCIBLE_ADMIN_GUID"
    SeedData__Users__1__name:  "crucible-admin@$DOMAIN"
    SeedData__UserPermissions__0__UserId:  "$OAUTH_ADMIN_GUID"
    SeedData__UserPermissions__0__PermissionId:  "00000000-0000-0000-0000-000000000001"
    SeedData__UserPermissions__1__UserId:  "$OAUTH_CRUCIBLE_ADMIN_GUID"
    SeedData__UserPermissions__1__PermissionId:  "00000000-0000-0000-0000-000000000001"


caster-ui:
  image:
    repository: cmusei/caster-ui
    tag: '3.2.0'
    pullPolicy: IfNotPresent
    
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: $INGRESS_CLASS
      nginx.ingress.kubernetes.io/proxy-read-timeout: '86400'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '86400'
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: $DOMAIN
        paths:
          - path: "/caster(/|$)(.*)"
            pathType: Prefix
    tls:
      - secretName: appliance-cert
        hosts:
         - $DOMAIN
  
  env: 
    ## basehref is path to the app
    APP_BASEHREF: "/caster"

  # Config app settings with a JSON file.
  # These values correspond to an OpenID connect client
  settings: |-
    {
      "ApiUrl": "https://$DOMAIN/caster",
      "OIDCSettings": {
        "authority": "https://$DOMAIN/$OAUTH_PROVIDER/$OAUTH_AUTHORITY_URL",
        "client_id": "${OAUTH_ENV_NAME}_${OAUTH_GROUP_ID}_caster-ui",
        "redirect_uri": "https://$DOMAIN/caster/auth-callback",
        "post_logout_redirect_uri": "https://$DOMAIN/caster",
        "response_type": "code",
        "scope": "openid profile email caster-api",
        "automaticSilentRenew": true,
        "silent_redirect_uri": "https://$DOMAIN/caster/auth-callback-silent"
      },
      "UseLocalAuthStorage": true,
      "AppTopBarHexColor": "#E9831C",
      "AppTopBarHexTextColor": "#FFFFFF",
      "AppTopBarText": "Caster",
      "Hotkeys": {
        "PROJECT_NEW": {
          "keys": "meta.p",
          "group": "",
          "description": "New Project"
        },
        "ENTER": {
          "keys": "enter",
          "group": "Global",
          "description": "Default 'confirm'",
          "allowIn": ["INPUT"]
        },
        "ESCAPE": {
          "keys": "escape",
          "group": "Global",
          "description": "Default 'cancel'",
          "allowIn": ["INPUT", "TEXTAREA"]
        },
        "FILE_LOCK_TOGGLE": {
          "keys": "control.l",
          "group": "Editor",
          "description": "Unlock / Lock a file",
          "allowIn": ["INPUT", "TEXTAREA"]
        },
        "FILE_SAVE": {
          "keys": "control.s",
          "group": "Editor",
          "description": "Save a file",
          "allowIn": ["INPUT", "TEXTAREA"]
        }
      }
    }